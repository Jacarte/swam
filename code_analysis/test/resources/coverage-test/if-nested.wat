(module $t
    (func $dummy)
  (func (export "nested") (param i32 i32) (result i32)
      (if (result i32) (local.get 0)
        (then
          (if (local.get 1) (then (call $dummy) (block) (nop)))
          (if (local.get 1) (then) (else (call $dummy) (block) (nop)))
          (if (result i32) (local.get 1)
            (then (call $dummy) (i32.const 9))
            (else (call $dummy) (unreachable))
          )
        )
        (else
          (if (local.get 1) (then (call $dummy) (block) (nop)))
          (if (local.get 1) (then) (else (call $dummy) (block) (nop)))
          (if (result i32) (local.get 1)
            (then (call $dummy) (i32.const 10))
            (else (call $dummy) (i32.const 11))
          )
        )
      )
    )
    (func (export "multi") (param i32) (result i32 i32)
        (if (local.get 0)
            (then
                (call $dummy)
                (call $dummy)
                (call $dummy)
                ))
        (if (local.get 0)
            (then)
            (else
                (call $dummy)
                (call $dummy)
                (call $dummy)
                )
             )
        (if (result i32) (local.get 0)
          (then (call $dummy) (call $dummy) (i32.const 1))
          (else (call $dummy) (call $dummy) (i32.const 2))
        )
        (if (result i32 i64 i32) (local.get 0)
          (then
            (call $dummy) (call $dummy) (i32.const 3)
            (call $dummy) (call $dummy) (i64.const 4)
            (call $dummy) (call $dummy) (i32.const 5)
          )
          (else
            (call $dummy) (call $dummy) (i32.const 6)
            (call $dummy) (call $dummy) (i64.const 7)
            (call $dummy) (call $dummy) (i32.const 8)
          )
        )
        (drop) (drop)
      )
)